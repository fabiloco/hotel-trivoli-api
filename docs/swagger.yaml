definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Product:
    description: Products information in stock
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        description: product name
        type: string
      price:
        description: product price
        type: number
      stock:
        description: product stock avaliable
        type: integer
      type:
        description: product type
        items:
          $ref: '#/definitions/model.ProductType'
        type: array
      updatedAt:
        type: string
    type: object
  model.ProductType:
    description: Product type information
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        description: type name
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /product:
    get:
      consumes:
      - application/json
      description: list avaliable products in the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: List products
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Create new products
      parameters:
      - description: Body of the request
        in: body
        name: body
        required: true
        schema:
          example: |-
            {
            "name": "test product",
            "price": 2000,
            "stock": 100,
            "type": "test type"
            }
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Create products
      tags:
      - product
  /product-type:
    get:
      consumes:
      - application/json
      description: list avaliable product types in the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProductType'
            type: array
      summary: List product types
      tags:
      - product type
    post:
      consumes:
      - application/json
      description: Create new product types
      parameters:
      - description: Body of the request
        in: body
        name: body
        required: true
        schema:
          example: |-
            {
            "name": "test product type"}
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProductType'
            type: array
      summary: Create a product type
      tags:
      - product type
  /product-type/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing product type
      parameters:
      - description: id of the product type to delete
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProductType'
            type: array
      summary: Delete product type
      tags:
      - product type
    get:
      consumes:
      - application/json
      description: Get a single product type by its id
      parameters:
      - description: id of the product type to retrieve
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProductType'
            type: array
      summary: Get a product type
      tags:
      - product type
    put:
      consumes:
      - application/json
      description: Edit existing product type
      parameters:
      - description: Body of the request
        in: body
        name: body
        required: true
        schema:
          example: |-
            {
            "name": "test product"}
          type: string
      - description: id of the product type to update
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProductType'
            type: array
      summary: Update product type
      tags:
      - product type
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing product
      parameters:
      - description: id of the product to delete
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Delete products
      tags:
      - product
    get:
      consumes:
      - application/json
      description: Get a single product by its id
      parameters:
      - description: id of the product to retrieve
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Get a product
      tags:
      - product
    put:
      consumes:
      - application/json
      description: Edit existing product
      parameters:
      - description: Body of the request
        in: body
        name: body
        required: true
        schema:
          example: |-
            {
            "name": "test product",
            "price": 2000,
            "stock": 100,
            "type": "test type"
            }
          type: string
      - description: id of the product to update
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Update products
      tags:
      - product
swagger: "2.0"
